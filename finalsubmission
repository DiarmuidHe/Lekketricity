
#define BLYNK_TEMPLATE_ID           "TMPL4IbbVHXMm"
#define BLYNK_TEMPLATE_NAME         "Quickstart Template"
#define BLYNK_AUTH_TOKEN            "QqeA0dniT9f7IYnX_Cqd1SCQEkxeOPYi"

#define BLYNK_PRINT Serial

#include <Wire.h>
#include "rgb_lcd.h"
int led = 2;
rgb_lcd lcd;


bool lcdPrint = true;
#include <Bridge.h>
#include <BlynkSimpleYun.h>


BlynkTimer timer;

BLYNK_WRITE(V0)
{

  int value = param.asInt();


  Blynk.virtualWrite(V1, value);
 if (value==1){
    digitalWrite(13,HIGH);

  }
  else{
    digitalWrite(13,LOW);
  }
}

BLYNK_CONNECTED()
{

  Blynk.setProperty(V3, "offImageUrl", "https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations.png");
  Blynk.setProperty(V3, "onImageUrl",  "https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations_pressed.png");
  Blynk.setProperty(V3, "url", "https://docs.blynk.io/en/getting-started/what-do-i-need-to-blynk/how-quickstart-device-was-made");
}

void myTimerEvent()
{

  Blynk.virtualWrite(V2, millis() / 1000);
}

void setup()
{
  lcd.begin(16, 2);

  Serial.begin(9600);
  pinMode(led, OUTPUT);
  Serial.begin(115200);

  Blynk.begin(BLYNK_AUTH_TOKEN);

  timer.setInterval(1000L, myTimerEvent);
}

void loop()
{
  Blynk.run();
  timer.run();
  lcd.setCursor(0, 1);
  int knobValue = analogRead(A0);
  Serial.println(knobValue);
  if(knobValue >= 400){
    lcdPrint = true;
    digitalWrite(led, HIGH);
    
    lcd.clear();
  }
  else if(knobValue < 0){
 
    
    if(lcdPrint == true ){
      //digitalWrite(led, LOW);
      lcd.print("No lekke");
      Serial.println("No Lekke");
      Blynk.logEvent("No Lekke");
      lcdPrint = false;
     
    }

  }
}
